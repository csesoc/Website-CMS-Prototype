// Code generated by MockGen. DO NOT EDIT.
// Source: dependency_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	repositories "cms.csesoc.unsw.edu.au/database/repositories"
	logger "cms.csesoc.unsw.edu.au/internal/logger"
	gomock "github.com/golang/mock/gomock"
)

// MockDependencyFactory is a mock of DependencyFactory interface.
type MockDependencyFactory struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyFactoryMockRecorder
}

// MockDependencyFactoryMockRecorder is the mock recorder for MockDependencyFactory.
type MockDependencyFactoryMockRecorder struct {
	mock *MockDependencyFactory
}

// NewMockDependencyFactory creates a new mock instance.
func NewMockDependencyFactory(ctrl *gomock.Controller) *MockDependencyFactory {
	mock := &MockDependencyFactory{ctrl: ctrl}
	mock.recorder = &MockDependencyFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDependencyFactory) EXPECT() *MockDependencyFactoryMockRecorder {
	return m.recorder
}

// GetFilesystemRepo mocks base method.
func (m *MockDependencyFactory) GetFilesystemRepo() repositories.FilesystemRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilesystemRepo")
	ret0, _ := ret[0].(repositories.FilesystemRepository)
	return ret0
}

// GetFilesystemRepo indicates an expected call of GetFilesystemRepo.
func (mr *MockDependencyFactoryMockRecorder) GetFilesystemRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilesystemRepo", reflect.TypeOf((*MockDependencyFactory)(nil).GetFilesystemRepo))
}

// GetFrontendsRepo mocks base method.
func (m *MockDependencyFactory) GetFrontendsRepo() repositories.FrontendsRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFrontendsRepo")
	ret0, _ := ret[0].(repositories.FrontendsRepository)
	return ret0
}

// GetFrontendsRepo indicates an expected call of GetFrontendsRepo.
func (mr *MockDependencyFactoryMockRecorder) GetFrontendsRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFrontendsRepo", reflect.TypeOf((*MockDependencyFactory)(nil).GetFrontendsRepo))
}

// GetGroupsRepo mocks base method.
func (m *MockDependencyFactory) GetGroupsRepo() repositories.GroupsRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroupsRepo")
	ret0, _ := ret[0].(repositories.GroupsRepository)
	return ret0
}

// GetGroupsRepo indicates an expected call of GetGroupsRepo.
func (mr *MockDependencyFactoryMockRecorder) GetGroupsRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroupsRepo", reflect.TypeOf((*MockDependencyFactory)(nil).GetGroupsRepo))
}

// GetLogger mocks base method.
func (m *MockDependencyFactory) GetLogger() *logger.Log {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogger")
	ret0, _ := ret[0].(*logger.Log)
	return ret0
}

// GetLogger indicates an expected call of GetLogger.
func (mr *MockDependencyFactoryMockRecorder) GetLogger() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogger", reflect.TypeOf((*MockDependencyFactory)(nil).GetLogger))
}

// GetPersonsRepo mocks base method.
func (m *MockDependencyFactory) GetPersonsRepo() repositories.PersonRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPersonsRepo")
	ret0, _ := ret[0].(repositories.PersonRepository)
	return ret0
}

// GetPersonsRepo indicates an expected call of GetPersonsRepo.
func (mr *MockDependencyFactoryMockRecorder) GetPersonsRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPersonsRepo", reflect.TypeOf((*MockDependencyFactory)(nil).GetPersonsRepo))
}

// GetPublishedVolumeRepo mocks base method.
func (m *MockDependencyFactory) GetPublishedVolumeRepo() repositories.PublishedVolumeRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPublishedVolumeRepo")
	ret0, _ := ret[0].(repositories.PublishedVolumeRepository)
	return ret0
}

// GetPublishedVolumeRepo indicates an expected call of GetPublishedVolumeRepo.
func (mr *MockDependencyFactoryMockRecorder) GetPublishedVolumeRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPublishedVolumeRepo", reflect.TypeOf((*MockDependencyFactory)(nil).GetPublishedVolumeRepo))
}

// GetUnpublishedVolumeRepo mocks base method.
func (m *MockDependencyFactory) GetUnpublishedVolumeRepo() repositories.UnpublishedVolumeRepository {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUnpublishedVolumeRepo")
	ret0, _ := ret[0].(repositories.UnpublishedVolumeRepository)
	return ret0
}

// GetUnpublishedVolumeRepo indicates an expected call of GetUnpublishedVolumeRepo.
func (mr *MockDependencyFactoryMockRecorder) GetUnpublishedVolumeRepo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUnpublishedVolumeRepo", reflect.TypeOf((*MockDependencyFactory)(nil).GetUnpublishedVolumeRepo))
}

// Code generated by MockGen. DO NOT EDIT.
// Source: dependency_factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	endpoints "cms.csesoc.unsw.edu.au/endpoints"
	gomock "github.com/golang/mock/gomock"
)

// MockDependencyFactory is a mock of DependencyFactory interface.
type MockDependencyFactory struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyFactoryMockRecorder
}

// MockDependencyFactoryMockRecorder is the mock recorder for MockDependencyFactory.
type MockDependencyFactoryMockRecorder struct {
	mock *MockDependencyFactory
}

// NewMockDependencyFactory creates a new mock instance.
func NewMockDependencyFactory(ctrl *gomock.Controller) *MockDependencyFactory {
	mock := &MockDependencyFactory{ctrl: ctrl}
	mock.recorder = &MockDependencyFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDependencyFactory) EXPECT() *MockDependencyFactoryMockRecorder {
	return m.recorder
}

// GetDepFromType mocks base method.
func (m *MockDependencyFactory) GetDepFromType(arg0 reflect.Type) endpoints.Dependency {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDepFromType", arg0)
	ret0, _ := ret[0].(endpoints.Dependency)
	return ret0
}

// GetDepFromType indicates an expected call of GetDepFromType.
func (mr *MockDependencyFactoryMockRecorder) GetDepFromType(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDepFromType", reflect.TypeOf((*MockDependencyFactory)(nil).GetDepFromType), arg0)
}

// GetDependency mocks base method.
func (m *MockDependencyFactory) GetDependency(depType endpoints.Dependency) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDependency", depType)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetDependency indicates an expected call of GetDependency.
func (mr *MockDependencyFactoryMockRecorder) GetDependency(depType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDependency", reflect.TypeOf((*MockDependencyFactory)(nil).GetDependency), depType)
}
